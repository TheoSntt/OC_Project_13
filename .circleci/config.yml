# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  python: circleci/python@2.1.1
  docker: circleci/docker@2.3.0
  # heroku: circleci/heroku@1.2.6

jobs:
  unit-tests-and-linter:
    docker:
      - image: cimg/python:3.11.5
    steps:
      - checkout
      - run:
          name: Install Python deps in a venv
          command: |
            python3 -m venv env
            . env/bin/activate
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Linter
          command: flake8
      - run:
          name: Run Tests
          command: pytest --cov=.
      - run:
          name: Check Test Coverage
          command: |
            coverage=$(coverage report -m | grep TOTAL | awk '{print $4}')
            if [ "$coverage" \< 80 ]; then
              echo "Test coverage is below 80% ($coverage%)"
              exit 1
            fi

  build-push-docker:
    # executor: my-machine
    docker:
      - image: cimg/python:3.11.5
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -t $DOCKER_USER/oc_lettings:$CIRCLE_SHA1 .
      - run:
          name: Push Docker image
          command: |
            docker login -u $DOCKER_USER --password-stdin
            docker tag $DOCKER_USER/oc_lettings:$CIRCLE_SHA1 $DOCKER_USER/oc_lettings:latest
            docker push $DOCKER_USER/oc_lettings:$CIRCLE_SHA1
            docker push $DOCKER_USER/oc_lettings:latest

  deploy-on-render:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: "Deploy"
          command: curl -X GET https://api.render.com/deploy/srv-ck9effmgtj9c73cdmqg0?key=qkdphtHhxxs

workflows:
  build-and-deploy:
    jobs:
      - unit-tests-and-linter
      - build-push-docker:
          requires:
            - unit-tests-and-linter
          filters:
            branches:
              only:
                - main
      - deploy-on-render:
          requires:
            - build-push-docker
          filters:
            branches:
              only:
                - main
